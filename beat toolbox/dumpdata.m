function dumpdata (data, labels, destination)
% DUMPDATA   Save data to file or database.
%   DUMPATA saves a set of data specified by the user in a structured
%   fashion.
%   DUMPDATA (data) simply saves the numbers in DATA to a file in 
%   whatever form they happen to be in (row vector, column vector,
%   or matrix) with numbers separated by tabs.
%   DUMPDATA (DATA, LABELS) saves the numbers in DATA (assumed a
%   vector) associated with the labels given by LABELS in the format:
%   LABEL::DATA
%   with one label/data pair on each line.
%   Note that LABELS is a regular character array
%   Both these methods prompt the user for a file name.
%   DUMPDATA (DATA, LABELS, DESTINATION) saves to DESTINATION.
%   If the file DESTINATION exists, it will be overwritten.  Need to
%   add code so that DESTINATION can also be a (local or remote) database.

% By: Ian Kremenic
% Last modified: 7.21.2000

% set some constants
DELIM = '::';		% what separates the labels from the data

% check number of arguments
args = nargin;
error (nargchk (1, 3, args));		% error message if not enough/too many args
if (args < 3)		
% no destination specified
	% get file name
	[filename, pathname] = uiputfile ('*.*', 'Save data to file...');
	% check if user hit 'Cancel'
	if (~filename)
	   return;
   end
   destination = [pathname filename];
end
if (args < 2)
% no labels specified
   labels = [];
else
   % make sure there's a label for each datum 
   [numrows, numcols] = size (labels);
	if (~isempty (labels) & (length (data) ~= numrows))
      error ('There must be an equal number of labels and data!');
   end
   % make sure data a vector
   [numrows, numcols] = size (data);
   if ((numrows ~= 1) & (numcols ~= 1))
      error ('Data must be a vector!');
   end
end

% open file for writing
dataFile = fopen (destination, 'wt');

if (isempty (labels))
% if no labels, just write data to tab-delimited ASCII file   
   % make format string
	formatStr = '';
   [numrows numcols] = size (data);		% might be a matrix
	for theCol = 1:numcols
		formatStr = [formatStr '%9.5f '];
	end
	formatStr = [formatStr '\n'];
	% write to file
	fprintf (dataFile, formatStr, data);
else
   % we've got labels, so write data as LABEL::VALUE pairs   
   msgString = [];
	for index = 1:length (data)
   	outString = sprintf ('%s%s%9.5f', labels (index, :), DELIM, data (index));
      fprintf (dataFile, [outString '\n']);
      msgString = strvcat (msgString, outString);
   end
   % hell, toss it onscreen, too
   % the following generated by the ever-helpful GUIDE
	a = figure('Color',[0.8 0.8 0.8], ...
		'Name','Saved the following data...', ...
		'Position',[232 288 434 420], ...
		'Tag','Stat_Box');
	b = uicontrol('Parent',a, ...
		'Units','points', ...
		'BackgroundColor',[1 1 1], ...
		'Position',[15 49.5 291.75 255], ...
		'String',' ', ...
		'Style','listbox', ...
	    'Tag','Listbox1', ...
   	 'Max', 2, ...
		'Value',1);
	c = uicontrol('Parent',a, ...
		'Units','points', ...
		'Callback','delete (gcbf)', ...
		'Position',[132.75 13.5 55.5 19.5], ...
		'String','Done', ...
		'Tag','Pushbutton1');
	% enough GUIDE stuff
	set (b, 'String', msgString);
%   theBox = msgbox (msgString, 'Saved the following data...');
%   currentUnits = get (theBox, 'Units');
%   set (theBox, 'Units', 'normalized');
%   currentPos = get (theBox, 'Position');
%   set (theBox, 'Position', [.3 .1 currentPos(3) currentPos(4)]);
%   set (theBox, 'Units', currentUnits);
end

% close data file
fclose (dataFile)

% Part of the BEAT Toolbox.
% Copyright (C) 2001 Nicholas Institute of Sports Medicine and Athletic Trauma
%
% This program is free software; you can redistribute it and/or
% modify it under the terms of the GNU General Public License
% as published by the Free Software Foundation; either version 2
% of the License, or (at your option) any later version.
%
% This program is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.
%
% You should have received a copy of the GNU General Public License
% along with this program; if not, write to the Free Software
% Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.