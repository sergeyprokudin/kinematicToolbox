function [ptInfo, params, dataStart] = loadmyohdr (filename)
% Load header of MyoSoft file.
% used by LOADNOR for loading MyoSoft binary data.

% By: Ian Kremenic
% Last modified: 03.07.2001

% open file and read stuff out of it; there are two structs to read 
% metadata from, and then data.  structs are as follows:
% ...

DATA_FILE = fopen (filename, 'r', 'l');     % generated by PC, so little-endian
% first struct contains subject info, etc.
% subject last name
ptInfo.lastName = char (fread (DATA_FILE, 20, 'uchar'))';
% subject first name
ptInfo.firstName = char (fread (DATA_FILE, 20, 'uchar'))';
% test number
ptInfo.testNum = fread (DATA_FILE, 1, 'uint16');
% skip unused byte
fread (DATA_FILE, 1, 'uchar');
% age
ptInfo.age = char (fread (DATA_FILE, 4, 'uchar'))';
% height
ptInfo.height = char (fread (DATA_FILE, 6, 'uchar'))';
% weight
ptInfo.weight = char (fread (DATA_FILE, 4, 'uchar'))';
% short description of exercise
ptInfo.exercise = char (fread (DATA_FILE, 40, 'uchar'))';
% date and time
ptInfo.dateTime = char (fread (DATA_FILE, 30, 'uchar'))';
% supervising clinician
ptInfo.clinician = char (fread (DATA_FILE, 40, 'uchar'))';
% institution
ptInfo.institution = char (fread (DATA_FILE, 50, 'uchar'))';
% department
ptInfo.department = char (fread (DATA_FILE, 50, 'uchar'))';
% skip unused 13 bytes
fread (DATA_FILE, 13, 'uchar');
% list of muscles: 16x40 chars
for index = 1:16
    ptInfo.muscleList (index, :) = char (fread (DATA_FILE, 40, 'uchar'))';
end

% 1000-char memo
ptInfo.memo = char (fread (DATA_FILE, 1000, 'uchar'))';
% soc security num
ptInfo.ssn = char (fread (DATA_FILE, 12, 'uchar'))';
% medicare num
ptInfo.medicare = char (fread (DATA_FILE, 20, 'uchar'))';
% alt info num
ptInfo.sin = char (fread (DATA_FILE, 20, 'uchar'))';
% arm lengths

ptInfo.leftUpperArm = char (fread (DATA_FILE, 5, 'uchar'))';
ptInfo.leftLowerArm = char (fread (DATA_FILE, 5, 'uchar'))';
ptInfo.rightUpperArm = char (fread (DATA_FILE, 5, 'uchar'))';
ptInfo.rightLowerArm = char (fread (DATA_FILE, 5, 'uchar'))';
% unused filename
% very annoying semicolon missing here! 
fread (DATA_FILE, 13, 'uchar')';
% gender
ptInfo.gender = char (fread (DATA_FILE, 4, 'uchar'))';
% modification info
ptInfo.modification = char (fread (DATA_FILE, 4, 'uchar'))';
% 35 reserved  bytes
fread (DATA_FILE, 35, 'uchar')';
% second struct contains 'parameters'
% sampling frequency
params.sampFreq = fread (DATA_FILE, 1, 'double');
% 'time base', in msec, referred to as 'SamplingInterval'
params.sampInt = fread (DATA_FILE, 1, 'double');
% number of channels
params.numChans = fread (DATA_FILE, 1, 'int16');
% order of recorded channels
params.chanOrder = fread (DATA_FILE, 16, 'int16')';
% number of channels displayed

params.numChansDisplayed = fread (DATA_FILE, 1, 'int16');
% which channels get displayed
params.chanDisplayList = fread (DATA_FILE, 16, 'int16')';
% A/D gain on each channel
params.chanGain = fread (DATA_FILE, 16, 'int16')';
% type of data (raw, integrated, torque, pos,...)
params.chanType = fread (DATA_FILE, 16, 'int16')';
% 4 unused doubles: 'OnPeriod OffPeriod TotalPeriodOn TotalPeriodOff'
fread (DATA_FILE, 4, 'double');
% total sampling time
params.duration = fread (DATA_FILE, 1, 'double');
% total number of samples
params.numSamplesTotal = fread (DATA_FILE, 1, 'uint32');
% numSamplesTotal / numChans
params.numSamples = fread (DATA_FILE, 1, 'uint32');
% display scales
params.displayScale = fread (DATA_FILE, 16, 'int16')';
% units of measure for each channel: 16x10
for index = 1:16
    params.chanUnits (index, :) = char (fread (DATA_FILE, 10, 'uchar'))';
end
% display color for each channel
params.displayColors = fread (DATA_FILE, 16, 'int16')';
% unused: 2 ints 'MaxChannels MinChannels', 40 char array 'szDevice'
% 44 bytes total
fread (DATA_FILE, 44, 'uchar');
% polarity: 1=uni, 2=bipolar
params.polarity = fread (DATA_FILE, 1, 'int16');
% 85 reserved bytes
fread (DATA_FILE, 85, 'int16');

% find out current position in file for header size
dataStart = ftell (DATA_FILE);

% close file
fclose (DATA_FILE);

% Part of the BEAT Toolbox.
% Copyright (C) 2001 Nicholas Institute of Sports Medicine and Athletic Trauma
%
% This program is free software; you can redistribute it and/or
% modify it under the terms of the GNU General Public License
% as published by the Free Software Foundation; either version 2
% of the License, or (at your option) any later version.
%
% This program is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.
%
% You should have received a copy of the GNU General Public License
% along with this program; if not, write to the Free Software
% Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.