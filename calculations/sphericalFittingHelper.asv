function [ output_args ] = sphericalFittingHelper(staticData,mkrData,functionVariables)
%UNTITLED Summary of this function goes here
%   Detailed explanation goes here

% path 2 c3d file
c3dFilePath = functionVariables{1};
% marker names to use in analysis
parentMkrs = functionVariables{2};
childMkrs  = functionVariables{3};
% Name of the output marker
outputMkr  =  functionVariables{4};

% Read in the marker data
structData = btk_loadc3d(c3dFilePath, 10);
mkrData = structData.marker_data.Markers; 


%% Generate the local frame of the pelvis
if length(parentMkrs) == 4

    mkrData =  stationBuilder(mkrData, parentMkrs, {'midPelvis' 'SACR'} );
    [staticFrameOrigin, staticFrameOrient] = frameBuilder(mkrData,{'midPelvis'}, {parentMkrs{1:2} 'SACR'}, 'v1v3' );

elseif length(parentMkrs) == 3
    
    mkrData =  stationBuilder(data, parentMkrs(1:2), {'midPelvis'} );
    [frameOrigin, frameOrient] = frameBuilder(mkrData,{'midPelvis'}, parentMkrs, 'v1v3' );

end

%% but the thigh stations into the local frame of the the Pelvis
newStations    = stationInFrame(mkrData, frameOrigin, frameOrient, childMkrs, 'local');

%% Using the local station points, calculate the ceneter of
% rotation
Cm = sphericalFitting(newStations);

%% Generate the local frame of the pelvis
if length(parentMkrs) == 4

     staticData =  stationBuilder(staticData, parentMkrs, {'midPelvis' 'SACR'} );
     [staticFrameOrigin, staticFrameOrient] = frameBuilder(mkrData,{'midPelvis'}, {parentMkrs{1:2} 'SACR'}, 'v1v3' );

elseif length(parentMkrs) == 3

    staticData =  stationBuilder(staticData, parentMkrs(1:2), {'midPelvis'});
    [staticFrameOrigin, staticFrameOrient] = frameBuilder(mkrData,{'midPelvis'}, parentMkrs, 'v1v3' );

end


CmG= repmat(Cm, length(staticFrameOrient),1);

staticStation   = stationInFrame(staticData,staticFrameOrigin, staticFrameOrient, {CmG}, 'global');

eval(['staticData.' char(outputMkr) ' = staticStation;' ])

end

